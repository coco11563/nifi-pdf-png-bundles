package pdf.test;

import org.apache.avro.Schema;
import org.apache.avro.file.DataFileStream;
import org.apache.avro.generic.GenericDatumReader;
import org.apache.avro.generic.GenericRecord;
import org.apache.avro.io.DatumReader;
import org.apache.nifi.flowfile.FlowFile;
import org.apache.nifi.processor.ProcessSession;
import org.apache.nifi.processors.ext.pdf.SimpleCSVToAvro;
import org.apache.nifi.processors.ext.pdf.utils.DirectBinaryDecoder;
import org.apache.nifi.util.MockFlowFile;
import org.apache.nifi.util.MockProcessSession;
import org.apache.nifi.util.TestRunner;
import org.apache.nifi.util.TestRunners;
import org.junit.Test;

import java.io.*;
import java.util.List;

public class CSVProcessorTest {
    final private TestRunner testRunnerSPX = TestRunners.newTestRunner(new SimpleCSVToAvro());
    @Test
    public void testRunnerSPX() throws IOException {
        System.out.println(schema);
        testRunnerSPX.setProperty(SimpleCSVToAvro.DELIMITER, "\t");
        testRunnerSPX.setProperty(SimpleCSVToAvro.SCHEMA, schema);
//        ProcessSession ps = testRunnerSPX.getProcessSessionFactory().createSession();
        ProcessSession ps = testRunnerSPX.getProcessSessionFactory().createSession();
        FlowFile test = ps.write(ps.create(), out -> {
            BufferedReader fis =
                    new BufferedReader(new FileReader
                            (new File("C:\\Users\\coco1\\IdeaProjects\\nifi-pdf-png-bundles\\nifi-pdf-png-processors\\src\\main\\resources\\csv\\combine_red.csv")));
            String str = null;
            BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(out));
            while ((str = fis.readLine()) != null) {
                bw.write(str);
                bw.newLine();
            }
            bw.flush();
        });
        testRunnerSPX.enqueue(test);
        testRunnerSPX.run();
        List<MockFlowFile> ff =
                testRunnerSPX.getFlowFilesForRelationship(SimpleCSVToAvro.REL_SUCCESS);
        int i = 1;
        Schema o_schema = new Schema.Parser().parse(schema);
        for (MockFlowFile f : ff) {
            ps.read(f, in -> {
                GenericRecord gr = null;
                int count = 0;
                try (final DataFileStream<GenericRecord> reader =
                             new DataFileStream<>(in, new GenericDatumReader<GenericRecord>(o_schema))){
                    while (reader.hasNext()) {
                        gr = reader.next();
                        count ++;
                    }
                }
                System.out.println(count);
            });

        }
    }

    final static String schema = "{\n" +
            "    \"type\":\"record\",\n" +
            "    \"name\":\"deliver_record\",\n" +
            "    \"doc\":\"Schema generated by Kite\",\n" +
            "    \"fields\":[\n" +
            "        {\n" +
            "            \"name\":\"JournalID\",\n" +
            "            \"type\":[\n" +
            "                \"null\",\n" +
            "                \"long\"\n" +
            "            ],\n" +
            "   \"default\":null,\n" +
            "            \"doc\":\"Type inferred from '11205'\",\n" +
            "\"default\":null\n" +
            "        },\n" +
            "        {\n" +
            "            \"name\":\"JournalTitle\",\n" +
            "             \"type\":[\n" +
            "                \"null\",\n" +
            "                \"string\"\n" +
            "            ],\n" +
            "            \"default\":null,\n" +
            "            \"doc\":\"Type inferred from 'Social Indicators Research'\",\n" +
            "\"default\":null\n" +
            "        },\n" +
            "        {\n" +
            "            \"name\":\"PrintISSN\",\n" +
            "             \"type\":[\n" +
            "                \"null\",\n" +
            "                \"string\"\n" +
            "            ],\n" +
            "            \"default\":null,\n" +
            "            \"doc\":\"Type inferred from '0303-8300'\",\n" +
            "\"default\":null\n" +
            "        },\n" +
            "        {\n" +
            "            \"name\":\"ElectronicISSN\",\n" +
            "             \"type\":[\n" +
            "                \"null\",\n" +
            "                \"string\"\n" +
            "            ],\n" +
            "            \"default\":null,\n" +
            "            \"doc\":\"Type inferred from '1573-0921'\",\n" +
            "\"default\":null\n" +
            "        },\n" +
            "        {\n" +
            "            \"name\":\"VolumeID\",\n" +
            "            \"type\":[\n" +
            "                \"null\",\n" +
            "                \"long\"\n" +
            "            ],\n" +
            "            \"doc\":\"Type inferred from '17'\",\n" +
            "            \"default\":null\n" +
            "        },\n" +
            "        {\n" +
            "            \"name\":\"IssueID\",\n" +
            "            \"type\":[\n" +
            "                \"null\",\n" +
            "                \"long\"\n" +
            "            ],\n" +
            "            \"doc\":\"Type inferred from '5'\",\n" +
            "            \"default\":null\n" +
            "        },\n" +
            "        {\n" +
            "            \"name\":\"ArticleDOI\",\n" +
            "             \"type\":[\n" +
            "                \"null\",\n" +
            "                \"string\"\n" +
            "            ],\n" +
            "            \"default\":null,\n" +
            "            \"doc\":\"Type inferred from '10.1007/s11205-017-1642-0'\"\n" +
            "        },\n" +
            "        {\n" +
            "            \"name\":\"ArticleTitle\",\n" +
            "           \"type\":[\n" +
            "                \"null\",\n" +
            "                \"string\"\n" +
            "            ],\n" +
            "            \"default\":null,\n" +
            "            \"doc\":\"Type inferred from 'Reforming Path of China.s Fertility Policy in Stab'\"\n" +
            "        },\n" +
            "        {\n" +
            "            \"name\":\"OnlineDate\",\n" +
            "             \"type\":[\n" +
            "                \"null\",\n" +
            "                \"string\"\n" +
            "            ],\n" +
            "            \"default\":null,\n" +
            "            \"doc\":\"Type inferred from '2017-5-17'\"\n" +
            "        },\n" +
            "        {\n" +
            "            \"name\":\"Abstract\",\n" +
            "            \"type\":[\n" +
            "                \"null\",\n" +
            "                \"string\"\n" +
            "            ],\n" +
            "            \"default\":null,\n" +
            "            \"doc\":\"Type inferred from 'The recent years witnessed a sharp drop in China.s'\"\n" +
            "        },\n" +
            "        {\n" +
            "            \"name\":\"Keywords\",\n" +
            "            \"type\":[\n" +
            "                \"null\",\n" +
            "                \"string\"\n" +
            "            ],\n" +
            "            \"default\":null,\n" +
            "            \"doc\":\"Type inferred from 'Demographic dividend, Fertility policy, Nonlinear '\"\n" +
            "        },\n" +
            "        {\n" +
            "            \"name\":\"FirstPage\",\n" +
            "                \"type\":[\n" +
            "                \"null\",\n" +
            "                \"long\"\n" +
            "            ],\n" +
            "   \"default\":null,\n" +
            "            \"doc\":\"Type inferred from '1'\"\n" +
            "        },\n" +
            "        {\n" +
            "            \"name\":\"LastPage\",\n" +
            "                \"type\":[\n" +
            "                \"null\",\n" +
            "                \"long\"\n" +
            "            ],\n" +
            "   \"default\":null,\n" +
            "            \"doc\":\"Type inferred from '19'\"\n" +
            "        },\n" +
            "        {\n" +
            "            \"name\":\"FunderName\",\n" +
            "             \"type\":[\n" +
            "                \"null\",\n" +
            "                \"string\"\n" +
            "            ],\n" +
            "            \"default\":null,\n" +
            "            \"doc\":\"Type inferred from 'National Natural Science Foundation of China, Natu'\"\n" +
            "        },\n" +
            "        {\n" +
            "            \"name\":\"CorrespondingAuthorName\",\n" +
            "             \"type\":[\n" +
            "                \"null\",\n" +
            "                \"string\"\n" +
            "            ],\n" +
            "            \"default\":null,\n" +
            "            \"doc\":\"Type inferred from 'Chong Wu'\"\n" +
            "        },\n" +
            "        {\n" +
            "            \"name\":\"CorrespondingAuthorEMail\",\n" +
            "            \"type\":[\n" +
            "                \"null\",\n" +
            "                \"string\"\n" +
            "            ],\n" +
            "            \"doc\":\"Type inferred from 'null'\",\n" +
            "            \"default\":null\n" +
            "        },\n" +
            "        {\n" +
            "            \"name\":\"CorrespondingAffiliation\",\n" +
            "            \"type\":[\n" +
            "                \"null\",\n" +
            "                \"string\"\n" +
            "            ],\n" +
            "            \"default\":null,\n" +
            "            \"doc\":\"Type inferred from 'Harbin Institute of Technology'\"\n" +
            "        }\n" +
            "    ]\n" +
            "}";
}
